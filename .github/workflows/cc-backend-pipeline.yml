# This is a basic workflow to help you get started with Actions

name: CC Backend Pipeline

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Environment Variables
env:
  PROJECT_ID: ${{secrets.GKE_PROJECT}}
  GKE_CLUSTER: cc-prod-cluster
  GKE_ZONE: europe-west1-b
  DEPLOYMENT_NAME: cc-backend
  IMAGE: cc-backend-image
  TAG: latest

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  # This is the first job of the workflow called "build"
  build:
  
    # Name of Job
    name: Build Maven Project
    # The type of runner that the job will run on
    runs-on: ubuntu-latest 

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Set up JDK
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with: 
          java-version: '11'
          distribution: 'adopt'
      
      # Build Maven Project and skip Tests
      - name: Build with Maven
        run: mvn clean package -DskipTests        

      # List target directory after building jar
      - name: List target directory
        run: |
          ls -la
          cd target
          ls -la
        
      # Upload Target Directory as GitHub Artefact
      - name: Cache Target Directory
        uses: actions/upload-artifact@v3
        with:
          name: target-directory
          path: target
  
  # This is the second job of the workflow called "test"
  test:  
  
    name: Test Maven Project
    runs-on: ubuntu-latest
    needs: [build]

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup PMD Source Code Analyzer
        uses: sfdx-actions/setup-pmd@v1
    
      - name: Run PMD Source Code Analyzer
        run: pmd -d ./src -R pmd_ruleset.xml -f text
  
  # This is the third job of the workflow called "image"
  image: 
  
    name: Push Maven Project to DockerHub
    runs-on: ubuntu-latest
    needs: [test]

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Target Directory
        uses: actions/download-artifact@v3
        with:
          name: target-directory
          path: target
    
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: target

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}   

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Push to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.DEPLOYMENT_NAME }}:${{ env.TAG }}
  
  # This is the furth job of the workflow called "deploy"
  deploy: 
  
    name: Deploy Maven Project to GKE
    runs-on: ubuntu-latest
    needs: [image]

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Google Cloud CLI (gcloud)
        uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{secrets.GKE_SA_KEY}}
          project_id: ${{secrets.GKE_PROJECT}}

      - name: Set Cluster # -> WICHTIG !!! run cmd is deprecated
#        run: |-
#          gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE
        uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      - name: Deploy Image to GKE cluster
        run: |-
          kubectl delete deployment $DEPLOYMENT_NAME
          kubectl delete deployment cc-frontend
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl rollout status deployment/cc-frontend
          kubectl get services
          kubectl get pods

# kubectl get services -o wide

# only use for the second time -> Never for the first time
  # kubectl delete deployment $DEPLOYMENT_NAME
  # kubectl delete deployment simple-frontend

# to deploy also the frontend
  # kubectl rollout status deployment/simple-frontend
